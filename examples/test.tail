# Y f -> (!x -> x &x) (!y -> f (!a -> (y &y) a))

# fac f -> !n -> case (lt n 2) of
#   true  => 1
#   false => mul n (f (sub n 1))

# fib f -> !n -> case n of
#   0 => 0
#   1 => 1
#   _ => add (f (sub n 1)) (f (sub n 2))

# join [
#   (0 ..< 10 |i| (Y &fac) i),
#   (0 ..< 10 |i| (Y &fib) i)
# ] "\n"

##

# beer n -> case n of
#   0 => "better go to the store and buy some more."
#   1 => ~"
#   1 bottle of beer on the wall
#   1 bottle of beer
#   Take one down, pass it around
#   "~
#   _ => $~"
#   {{n}} bottles of beer on the wall
#   {{n}} bottles of beer
#   Take one down, pass it around
#   {{head (lines (beer (sub n 1)))}}

#   "~

# join (map 99..=0 &beer) "\n"

# merge a b ->
#   case (len a) of
#     0 => b
#     _ => case (len b) of
#       0 => a
#       _ => case (lt (head a) (head b)) of
#         true  => [(head a)] ++ (merge (tail a) b)
#         false => [(head b)] ++ (merge a (tail b))

# mergesort ns ->
#   case (lt (len ns) 2) of
#     true  => ns
#     false =>
#       const h -> div (len ns) 2
#       merge (mergesort (take ns h)) (mergesort (drop ns h))

# shuffle ns -> case (lte (len ns) 1) of
#   true  => ns
#   false =>
#     const i -> rand 0 (sub (len ns) 1)
#     const x -> head (drop ns i)
#     const xs -> (take ns i) ++ (drop ns (add i 1))
#     [x] ++ (shuffle xs)

# const shuffled -> shuffle 1..=100
# const sorted -> mergesort shuffled

# $~"

# before: {{shuffled}} ({{len shuffled}})
# after:  {{sorted}} ({{len sorted}})

# "~

sum a b -> add a b

const add5 -> sum 5

(add5 10)
